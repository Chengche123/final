1 实际上，“C语言代码-汇编代码-机器码” 这个过程，在我们的计算机上进行的时候是由两部分组成的:
    第一个部分由编译（Compile）、汇编（Assemble）以及链接（Link）三个阶段组成。
        在这三个阶段完成之后，我们就生成了一个可执行文件。
    第二部分，我们通过装载器（Loader）把可执行文件装载（Load）到内存中。CPU从内存中读取指令和数据，来开始真正执行程序。


2 在Linux下，可执行文件和目标文件所使用的都是一种叫ELF（Execuatable and Linkable File Format）的文件格式，
  中文名字叫可执行与可链接文件格式，这里面不仅存放了编译成的汇编指令，还保留了很多别的数据。

3 ELF文件格式把各种信息，分成一个一个的Section保存起来:
    一: ELF有一个基本的文件头（File Header），用来表示这个文件的基本属性，比如是否是可执行文件，对应的CPU、操作系统等等
    二: .text Section，也叫作代码段或者指令段（Code Section），用来保存程序的代码和指令；
    三: .data Section，也叫作数据段（Data Section），用来保存程序里面设置好的初始化数据信息；
    四: .rel.text Secion，叫作重定位表（Relocation Table）。
        重定位表里，保留的是当前的文件里面，哪些跳转地址其实是我们不知道的。
    五: .symtab Section，叫作符号表（Symbol Table）。符号表保留了我们所说的当前文件里面定义的函数名称和对应地址的地址簿。

4 链接器:
    一: 链接器会扫描所有输入的目标文件，然后把所有符号表里的信息收集起来，构成一个全局的符号表。
    二: 然后再根据重定位表，把所有不确定要跳转地址的代码，根据符号表里面存储的地址，进行一次修正。
    三: 最后，把所有的目标文件的对应段进行一次合并，变成了最终的可执行代码。

5 一: Linux下著名的开源项目Wine，就是通过兼容PE格式的装载器，使得我们能直接在Linux下运行Windows程序的
  二: 微软的Windows里面也提供了WSL，也就是Windows Subsystem for Linux，可以解析和加载ELF格式的文件。



