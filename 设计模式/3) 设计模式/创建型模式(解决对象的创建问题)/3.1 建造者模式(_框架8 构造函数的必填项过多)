1 建造者模式:
    ⽐较常⽤的创建型设计模式，Builder模式，中⽂翻译为建造者模式或者构建者模式，也有⼈叫它⽣成器模式。

2.1 为什么需要建造者模式？
    一: 通过构造函数设置必填项，通过set()⽅法设置可选配置项
    二: 如果必填的配置项有很多，把这些必填配置项都放到构造函数中设置，那构造函数就⼜会出现参数列表很⻓的问题
        如果我们把必填项也通过set()⽅法设置，那校验这些必填项是否已经填写的逻辑就⽆处安放了
    三: 假设配置项之间有⼀定的依赖关系，或者配置项之间有⼀定的约束条件，
        那这些配置项之间的依赖关系或者约束条件的校验逻辑就⽆处安放了
    四: 如果我们希望ResourcePoolConfig类对象是不可变对象，
        我们就不能在ResourcePoolConfig类中暴露set()⽅法。

2.2 为了解决这些问题，建造者模式就派上⽤场了:
    一: 把校验逻辑放置到Builder类中，先创建建造者，并且通过set()⽅法设置建造者的变量值
    二: 然后在使⽤build()⽅法真正创建对象之前，做集中的校验，校验通过之后才会创建对象
    三: 把构造函数改为private私有权限。这样就只能通过建造者来创建类对象。

3 与⼯⼚模式有何区别？
    一: ⼯⼚模式是⽤来创建不同但是相关类型的对象（继承同⼀⽗类或者接⼝的⼀组⼦类），
        由给定的参数来决定创建哪种类型的对象
    二: 建造者模式是⽤来创建⼀种类型的复杂对象，通过设置不同的可选参数，“定制化”地创建不同的对象。

