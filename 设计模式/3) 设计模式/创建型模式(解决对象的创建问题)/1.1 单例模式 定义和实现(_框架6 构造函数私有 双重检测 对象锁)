1 单例的定义:
    ⼀个类只允许创建⼀个对象（或者叫实例），那这个类就是⼀个单例类

2 单例的⽤处:
    一: 从业务概念上，有些数据在系统中只应该保存⼀份，就⽐较适合设计为单例类。⽐如，系统的配置信息类。
    二: 除此之外，我们还可以使⽤单例解决资源访问冲突的问题。

3 要实现⼀个单例，我们需要关注的点⽆外乎下⾯⼏个：
    一: 构造函数需要是private访问权限的，这样才能避免外部通过new创建实例；
    二: 考虑对象创建时的线程安全问题；
    三: 考虑是否⽀持延迟加载；
    四: 考虑getInstance()性能是否⾼（是否加锁）。

4 单例的实现:
    一 饿汉式: 在类加载的期间，就已经将instance静态实例初始化好了
    二 懒汉式: 懒汉式相对于饿汉式的优势是⽀持延迟加载。
       这种实现⽅式会导致频繁加锁、释放锁，以及并发度低等问题，频繁的调⽤会产⽣性能瓶颈。
    三 双重检测: 双重检测实现⽅式既⽀持延迟加载、⼜⽀持⾼并发的单例实现⽅式。
       这种实现⽅式解决了懒汉式并发度低的问题。
    四 静态内部类和枚举: java特性


