1 实现
    一: 通过⼯⼚模式，在⼯⼚类中，通过⼀个Map或者List来缓存已经创建好的享元对象，以达到复⽤的⽬的

2 应用场景:
    一: 应⽤享元模式是为了实现对象复⽤，节省内存。
    二: 对于相似对象，可以将这些对象中相同的字段提取出来设计成享元，让这些⼤量相似对象引⽤这些享元

3 应用场景举例:
    一: 开发⼀个象棋游戏,⼀个游戏厅中有成千上万个“房间”，每个房间对应⼀个棋局。
        棋局要保存每个棋⼦的数据，可以将棋⼦的id、text、color属性拆分出来，设计成独⽴的类，并且作为享元供多个棋盘复⽤
    二: 在⽂本编辑器中，把每个⽂字都当作⼀个独⽴的对象来看待,对于字体格式，可以将它设计成享元
    

4 享元模式vs单例、对象池:
    一: 享元模式vs单例 
        在单例模式中，⼀个类只能创建⼀个对象，⽽在享元模式中，⼀个类可以创建多个对象，每个对象被多处代码引⽤共享
        享元模式有点类似于之前讲到的单例的变体：多例。
        应⽤享元模式是为了对象复⽤，节省内存，⽽应⽤多例模式是为了限制对象的个数。
    二: 享元模式vs对象池
        在任意时刻，每⼀个对象、连接、线程，被⼀个使⽤者独占
        享元模式中的“复⽤”可以理解为“共享使⽤”，在整个⽣命周期中，都是被所有使⽤者共享的，主要⽬的是节省空间。



        


