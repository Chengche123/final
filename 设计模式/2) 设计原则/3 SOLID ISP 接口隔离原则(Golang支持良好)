1 三种不同的理解:
    一: (调用者角度)如果把“接⼝”理解为⼀组接⼝集合，可以是某个微服务的接⼝，也可以是某个类库的接⼝等。
        如果部分接⼝只被部分调⽤者使⽤，我们就需要将这部分接⼝隔离出来，单独给这部分调⽤者使⽤，
        ⽽不强迫其他调⽤者也依赖这部分不会被⽤到的接⼝。
    二: (调用者角度)如果把“接⼝”理解为单个API接⼝或函数，部分调⽤者只需要函数中的部分功能，
        那我们就需要把函数拆分成粒度更细的多个函数，让调⽤者只依赖它需要的那个细粒度函数。
    三: (实现类角度)如果把“接⼝”理解为OOP中的接⼝，也可以理解为⾯向对象编程语⾔中的接⼝语法。
        那接⼝的设计要尽量单⼀，不要让接⼝的实现类和调⽤者，依赖不需要的接⼝函数。

2 接⼝隔离原则与单⼀职责原则的区别:
    一: 单⼀职责原则针对的是模块、类、接⼝的设计。
    二: 接⼝隔离原则相对于单⼀职责原则，⼀⽅⾯更侧重于接⼝的设计
    三: 另⼀⽅⾯它的思考⻆度也是不同的。接⼝隔离原则提供了⼀种判断接⼝的职责是否单⼀的标准：
        通过调⽤者如何使⽤接⼝来间接地判定


