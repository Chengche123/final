1 DRY原则:
    一: 实现逻辑重复，但功能语义不重复的代码，并不违反DRY原则
    二: 实现逻辑不重复，但功能语义重复的代码，也算是违反DRY原则

2 代码复⽤性:
    一: 减少代码耦合
    二: 满⾜单⼀职责原则
    三: 模块化
    四: 业务与⾮业务逻辑分离:
        越是跟业务⽆关的代码越是容易复⽤，越是针对特定业务的代码越难复⽤
    五: 通⽤代码下沉:
        从分层的⻆度来看，越底层的代码越通⽤、会被越多的模块调⽤，越应该设计得⾜够可复⽤
        为了避免交叉调⽤导致调⽤关系混乱，我们只允许上层代码调⽤下层代码及同层代码之间的调⽤，杜绝下层代码调⽤上层代码
        所以，通⽤的代码我们尽量下沉到更下层。
    六: 继承、多态、抽象、封装
    七: 应⽤模板等设计模式
    八: 泛型编程