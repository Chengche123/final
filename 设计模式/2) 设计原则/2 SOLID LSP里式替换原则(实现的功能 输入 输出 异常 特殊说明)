1 几个违反里式替换原则的例子
    一: 子类违背父类声明要实现的功能
        父类中提供的 sortOrdersByAmount() 订单排序函数，是按照金额从小到大来给订单排序的，
        而子类重写这个 sortOrdersByAmount() 订单排序函数之后，是按照创建日期来给订单排序的
    二: 子类违背父类对输入、输出、异常的约定
        在父类中，某个函数约定，输入数据可以是任意整数，但子类实现的时候，只允许输入数据是正整数，负数就抛出
        父类中，某个函数约定：运行出错的时候返回 null；而子类重载函数之后，实现变了，运行出错返回异常（exception），
        在父类中，某个函数约定，只会抛出 ArgumentNullException 异常，那子类的设计实现中只允许抛出 ArgumentNullException 异常
    三: 子类违背父类注释中所罗列的任何特殊说明
        父类中定义的 withdraw() 提现函数的注释是这么写的：“用户的提现金额不得超过账户余额……”，
        而子类重写 withdraw() 函数之后，针对 VIP 账号实现了透支提现的功能，也就是提现金额可以大于账户余额，

2 判断子类的设计实现是否违背里式替换原则，还有一个小窍门:
    拿父类的单元测试去验证子类的代码。如果某些单元测试运行失败，就有可能说明，
    子类的设计实现没有完全地遵守父类的约定，子类有可能违背了里式替换原则。