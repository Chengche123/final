1 封装（Encapsulation）:
    封装也叫作信息隐藏或者数据访问保护。
    对于封装这个特性，我们需要编程语言本身提供一定的语法机制来支持。这个语法机制就是访问权限控制。
    它能解决什么编程问题？
        封装特性存在的意义，一方面是保护数据不被随意修改，提高代码的可维护性；另一方面是仅暴露有限的必要接口，提高类的易用性。

2 抽象（Abstraction）:它没有很强的“特异性”，有时候并不被看作面向对象编程的特性之一。
    封装主要讲如何隐藏信息、保护数据，那抽象就是讲如何隐藏方法的具体实现，
        让使用者只需要关心方法提供了哪些功能，不需要知道这些功能是如何实现的
    抽象可以通过接口类或者抽象类来实现，

3 继承（Inheritance）:
    继承是用来表示类之间的 is-a 关系
    为了实现继承这个特性，编程语言需要提供特殊的语法机制来支持
    它能解决什么编程问题？继承主要是用来解决代码复用的问题

4 多态（Polymorphism）:
    多态是指子类可以替换父类，在实际的代码运行过程中，调用子类的方法实现
    多态特性的实现方式: 继承加方法重写 利用接口类语法 利用 duck-typing 语法
    它能解决什么编程问题？多态特性能提高代码的可扩展性和复用性。
    