1 通常内存的访问速度是纳秒级别的，而磁盘访问的速度是毫秒级别的

2 B+树简介:
    一: (非叶子节点只存储索引)树中的节点并不存储数据本身(这里也指对数据的引用)，而是只是作为索引。
    二: (叶子节点在链表上,方便按区间查找)把每个叶子节点串在一条链表上，链表中的数据是从小到大有序的
    三: (树的高度等于IO次数)如果根节点存储在内存中，其他节点存储在磁盘中,树的高度等于每次查询数据时磁盘IO操作的次数
    四: (节点大小等于页大小)让每个节点的大小等于一个页的大小。读取一个节点，只需要一次磁盘IO操作。

3 索引的弊端:
    一: (节点分裂,数据库写入速度变慢)在往数据库中写入数据的过程中，可能使索引中某些节点的子节点个数超过m,节点的大小超过了一个页的大小,
        需要将这个节点分裂成两个节点,分裂之后,上层父节点的子节点个数也可能超过m个,这时将父节点也分裂成两个节点
        所以，索引的存在会导致数据库写入的速度降低
    二: (节点合并,数据库删除速度变慢)频繁的数据删除，就会导致某些节点中，子节点的个数变得非常少
        可以设置一个阈值。在 B+ 树中，这个阈值等于 m/2。如果某个节点的子节点个数小于 m/2，我们就将它跟相邻的兄弟节点合并

4 B树:
    一: B+ 树中的节点不存储数据，只是索引，而 B 树中的节点存储数据；
    二: B 树中的叶子节点并不需要链表来串联。
    三: 也就是说，B 树只是一个每个节点的子节点个数不能小于 m/2 的 m 叉树。

