1 docker run 
    容器退出时即删除: --rm 
    共享目录: -v $(shell pwd):$(shell pwd) 
    工作区: -w $(shell pwd) 
    环境变量: -e ICODE=CF388DF1EF1C5EBE 
    镜像名称和命令: cap1573/cap-protoc -I ./ --go_out=./ --micro_out=./  ./proto/user/*.proto

2 Docker exec 命令
    一: 在容器 mynginx 中以交互模式执行容器内 /root/runoob.sh 脚本:
        runoob@runoob:~$ docker exec -it mynginx /bin/sh /root/runoob.sh
    二: 在容器 mynginx 中开启一个交互模式的终端:
        runoob@runoob:~$ docker exec -it mynginx /bin/bash

3 删除所有已经退出的容器:
    一: docker rm $(docker ps -aq)

4 获取容器/镜像的元数据
    一: docker inspect

5 容器资源的限制:
    一: docker run --memory=200M [image_name] # 交换分区大小在没有指定时默认和内存大小相等
    二: docker run --cpu-shares 10 --name=test1 [image_name] # --cpu-shares 后跟占用cpu的相对权重
        docker run --cpu-shares 5 --name=test1 [image_name]
        此时若test1和test2两个容器占满cpu,那么test1大约占66%,test2大约占33%