1 记一些关键字:
    一: 服务发布和引用 用proto文件描述接口,用protoc直接生成Go代码,自己写编译器生成前端代码
    二: 分布式存储 和注册中心，配置中心和分布式锁有关
    三: 服务调用 grpc框架，http2.0；前端用rpc风格api，rpc over http
    四: 服务监控和追踪 使用jaeger
    五: 服务治理
        1)跨横切面 服务路由，监控日志鉴权，熔断限流功能在Api网关；业务这边的在grpc拦截器里;
        2)服务容错 降级限流熔断,在客户端或者网关做；
        3)负载均衡 服务发现方式(客户端发现,服务端发现和sm);接入层用lvs+nginx;
        4)结点管理(结点健康检查) 注册中心和客户端这边都有一坨结点ip，注册中心那边用etcd租约，客户端这边用grpc healthcheck

2 简历上现在关于微服务能写什么? 结合项目写,不单独写在技能里
    后端接口:
        1) 用proto文件描述服务,BFF层的proto文件描述前端接口
        2) 分布式存储选型etcd,用来做注册中心 配置中心和分布式锁
        3) 微服务间用grpc通信,前端使用rpc风格http请求
        4) //TODO 链路追踪使用jaeger框架
        5) 前端认证header透传网关,BFF层拿到jwt后验证,在调用服务时把uid注入到函数的context中
        6) //TODO 降级限流熔断
        7) 去中心化,采用客户端发现模式;接入层用lvs+nginx;
        8) //TODO 结点健康检查
    前端界面:
        1) 用BFF层的proto文件生成基本调用类,继承后注入dio对象
        2) 
