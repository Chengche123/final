1 进程的创建:
    一: fork系统调用包含两个重要的事件:
        一个是将task_struct结构复制一份并且初始化
        另一个是试图唤醒新创建的子进程。
    
2 线程的创建:
    一: 线程不是一个完全由内核实现的机制，它是由内核态和用户态合作完成的
        pthread_create不是一个系统调用，是Glibc库的一个函数
    二: 每一个进程或者线程都有一个task_struct结构，在用户态也有一个用于维护线程的结构，就是这个pthread结构。
    三: 创建进程的话，调用的系统调用是fork，在copy_process函数里面，
        会将五大结构files_struct、fs_struct、sighand_struct、signal_struct、mm_struct都复制一遍，
        从此父进程和子进程各用各的数据结构
    四: 而创建线程的话，调用的是系统调用clone，
        在copy_process函数里面， 五大结构仅仅是引用计数加一，也即线程共享进程的数据结构。

