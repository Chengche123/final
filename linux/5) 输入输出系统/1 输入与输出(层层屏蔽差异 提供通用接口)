1 用设备控制器屏蔽设备差异:
    一: CPU并不直接和设备打交道，而是操作对应的设备控制器中的寄存器

2 输入输出设备大致可以分为块设备和字符设备
    一: 块设备将信息存储在固定大小的块中，每个块都有自己的地址。硬盘就是常见的块设备。
        由于块设备传输的数据量比较大，控制器里往往会有缓冲区。
    二: 字符设备发送或接受的是字节流。而不用考虑任何块结构，没有办法寻址。鼠标就是常见的字符设备。

3 CPU与控制器的寄存器和数据缓冲区进行通信:
    一: 每个控制寄存器被分配一个I/O端口，我们可以通过特殊的汇编指令（例如in/out类似的指令）操作这些寄存器。
    二: 数据缓冲区，可内存映射I/O，可以分配一段内存空间给它，就像读写内存一样读写数据缓冲区。

4 用驱动程序屏蔽设备控制器差异:
    一: 每种设备的控制器的寄存器、缓冲区等使用模式，指令都不同
    二: 设备驱动程序有统一的接口,不同的设备驱动程序，可以以同样的方式接入操作系统
    三: 设备驱动程序初始化的时候，会注册一个该设备的中断处理函数

5 用文件系统接口屏蔽驱动程序的差异:
    一: 操作设备，都是基于文件系统的接口，也要有一个统一的标准。
    二: 设备名称 所有设备都在/dev/文件夹下面创建一个特殊的设备文件。这个设备特殊文件也有inode
        但是它不关联到硬盘或任何其他存储介质上的数据，而是建立了与某个设备驱动程序的连接。
    三: 可以使用对于文件的操作命令和API来操作设备文件,从而操作设备驱动程序,从而操作设备
        使用cat命令，可以读取/dev/random 和/dev/urandom的数据流
        如果用文件的操作作用于/dev/sdb的话，会无法操作文件系统上的文件，操作的是这个设备。
    四: Linux的驱动程序已经被写成和操作系统有标准接口的代码，可以看成一个标准的内核模块。
        在Linux里面，安装驱动程序，其实就是加载一个内核模块。
    五: 对于设备来讲，还有一种接口称为ioctl，表示输入输出控制接口，是用于配置和修改特定设备属性的通用接口


