1 用户进程对信号的处理方式:
    一: 执行默认操作。
    二: 捕捉信号,为信号定义一个信号处理函数
    三: 忽略信号。
        有两个信号是应用进程无法捕捉和忽略的，即SIGKILL和SEGSTOP，它们用于在任何时候中断或结束某一进程。

2 注册信号处理函数的过程:
    一: 在用户程序里面，有两个函数可以调用，一个是signal，一个是sigaction，推荐使用sigaction。
    二: 在每一个进程的task_struct里面，都有一个sighand指向struct sighand_struct，
        里面是一个数组，下标是信号，里面的内容是信号处理函数。

3 信号的发送:
    一: 1)在终端输入某些组合键的时候，会给进程发送信号，例如，Ctrl+C产生SIGINT信号，Ctrl+Z产生SIGTSTP信号。
        2)硬件异常也会产生信号。
        比如，执行了除以0的指令，CPU就会产生异常，然后把SIGFPE信号发送给进程。
        再如，进程访问了非法内存，内存管理模块就会产生异常，然后把信号SIGSEGV发送给进程。
        3)内核也会主动给进程发送信号
        向读端已关闭的管道写数据时产生SIGPIPE信号; 当子进程退出时，要给父进程发送SIG_CHLD信号等。
        4)最直接发送信号的方法是通过kill命令
    二: 发送信号的方式多种多样,但是最终都是调用了do_send_sig_info函数，将信号放在相应的task_struct的信号数据结构中。
    三: 对于硬件触发的，无论是中断，还是信号，肯定是先到内核的
        中断完全在内核里面处理完毕
        信号则是放在对应的进程task_struct里信号相关的数据结构里面，然后等待进程在用户态去处理,有些严重的信号,内核会直接终止进程
    



