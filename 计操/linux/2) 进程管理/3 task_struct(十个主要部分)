1 无论是进程，还是线程，到了内核里面，我们统一都叫任务（Task），由一个统一的结构task_struct进行管理:
    一: 任务ID:
            1) 只有1个主线程的进程 pid和tgid相同 group_leader指向自己
            2) 如果主线程创建了其他线程,那个线程就有自己的pid,tgid是主线程的pid,group_leader指向主线程
            3) 这些字段和调度没多少关系,liunx调度的实体不分进程和线程
    二: 信号处理 处理的结果可以是忽略，可以是结束进程等等。
            1) 信号处理函数默认使用用户态的函数栈
    三: 任务状态: 就绪 运行或者阻塞
    四: 进程调度: 调度策略和优先级
    五: 运行统计信息: 用户态消耗的CPU时间;内核态消耗的CPU时间;自愿(voluntary)上下文切换计数
        非自愿(involuntary)上下文切换计数;进程启动时间，不包含睡眠时间;进程启动时间，包含睡眠时间
    六: 进程亲缘关系: parent指向其父进程; children表示链表的头部。链表中的所有元素都是它的子进程;
    七: 进程权限: 谁能操作我和我能操作谁
    八: 内存管理: 虚拟内存空间
    九: 文件与文件系统: 每个进程有一个文件系统的数据结构，还有一个打开文件的数据结构
    十: 内核态函数栈: 略

