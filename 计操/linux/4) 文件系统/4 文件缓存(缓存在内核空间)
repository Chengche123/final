1 系统调用层和虚拟文件系统层:
    一: 对于read来讲，里面调用vfs_read->__vfs_read。对于write来讲，里面调用vfs_write->__vfs_write。
    二: 每一个打开的文件，都有一个struct file结构。这里面有一个struct file_operations f_op，用于定义对这个文件做的操作
        __vfs_read会调用相应文件系统的file_operations里面的read操作，
        __vfs_write会调用相应文件系统file_operations里的write操作。
    三: 对于ext4文件系统来讲，内核定义了一个ext4_file_operations。
        由于ext4没有定义read和write函数，于是会调用ext4_file_read_iter和ext4_file_write_iter。

2 缓存I/O:
    一: 不直接操作硬盘，而是将读写都在内存中(内核的缓冲区中)
        然后批量读取或者写入硬盘。一旦能够命中内存，读写效率就会大幅度提高。
    二: 缓存I/O 大多数文件系统的默认I/O操作都是缓存I/O
    三: 直接IO 不经过内核缓冲区，从而减少了在内核缓存和用户程序之间数据复制。

3 带缓存的写入操作
    一: 脏页，就是写入到缓存，但是还没有写入到硬盘的页面。
    二: 触发回写的场景:
        缓存的数据太多的时候，会触发回写
        用户主动调用sync，将缓存刷到硬盘上去
        当内存十分紧张，以至于无法分配页面的时候
        脏页已经更新了较长时间，时间上超过了timer，需要及时回写

4 带缓存的读操作
    一: 读取比写入总体而言简单一些，主要涉及预读的问题。



